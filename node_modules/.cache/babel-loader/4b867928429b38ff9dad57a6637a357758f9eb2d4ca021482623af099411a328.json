{"ast":null,"code":"var _jsxFileName = \"/home/drevil/react/drum-machine-2/src/components/drumpad.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tappable from 'react-tappable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drumpad(_ref) {\n  _s();\n  let {\n    /*drumObj,*/drum,\n    displayHandler,\n    volume /*, audioCtx, gainNode, destination, recorder,*/,\n    handlePlaySound\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const activeStyle = {\n    \"backgroundColor\": \"red\",\n    \"borderColor\": \"rgba(255,10,10,1)\"\n  };\n  const handleKeypress = e => {\n    if (e.keyCode === drum.keycode) {\n      playClip();\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeypress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeypress);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume]);\n  const playClip = () => {\n    console.log(e);\n    displayHandler(drum.label);\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    const sound = document.getElementById(drum.id);\n    handlePlaySound(sound);\n\n    //console.log(sound);\n    //sound.currentTime = 0;\n\n    //sound.play();\n    /*\n    let source = audioCtx.createMediaElementSource(sound);\n    source.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n    gainNode.connect(destination);*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tappable, {\n    className: \"drum-pad-container\",\n    id: drum.label,\n    onTouchStart: playClip,\n    onClick: playClip,\n    onTap: playClip,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drum-pad`,\n      id: drum.pad,\n      style: active ? activeStyle : {},\n      children: [drum.id, /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: drum.src,\n        id: drum.id,\n        className: \"clip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"PAD \", drum.pad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"KEY \", drum.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Drumpad, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n_c = Drumpad;\nexport default Drumpad;\nvar _c;\n$RefreshReg$(_c, \"Drumpad\");","map":{"version":3,"names":["React","useState","Tappable","Drumpad","drum","displayHandler","volume","handlePlaySound","active","setActive","activeStyle","handleKeypress","e","keyCode","keycode","playClip","useEffect","document","addEventListener","removeEventListener","console","log","label","setTimeout","sound","getElementById","id","pad","src"],"sources":["/home/drevil/react/drum-machine-2/src/components/drumpad.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Tappable from 'react-tappable';\n\nfunction Drumpad({ /*drumObj,*/ drum, displayHandler, volume/*, audioCtx, gainNode, destination, recorder,*/, handlePlaySound }){\n\n    const [active, setActive] = useState(false);\n    const activeStyle = {\n        \"backgroundColor\": \"red\",\n        \"borderColor\": \"rgba(255,10,10,1)\"\n    };\n\n\n    const handleKeypress = (e) => {\n\n        if (e.keyCode === drum.keycode) {\n            playClip();\n           \n        }\n        \n    };\n\n    \n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeypress);\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeypress);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [volume]); \n\n    \n\n    \n    \n\n    const playClip = () => {\n        console.log(e);\n        displayHandler(drum.label);\n        setActive(true);\n        setTimeout(()=>setActive(false), 200);\n        const sound = document.getElementById(drum.id);\n        handlePlaySound(sound);\n        \n        //console.log(sound);\n        //sound.currentTime = 0;\n        \n        //sound.play();\n        /*\n        let source = audioCtx.createMediaElementSource(sound);\n        source.connect(gainNode);\n        gainNode.connect(audioCtx.destination);\n        gainNode.connect(destination);*/\n    };\n\n\n    return(\n        <Tappable className=\"drum-pad-container\" id={drum.label} onTouchStart={playClip} onClick={playClip} onTap={playClip}>\n            <div className={`drum-pad`} id={drum.pad} style={ active ? activeStyle:{}}>\n                {drum.id}\n                <audio src={drum.src} id={drum.id} className=\"clip\"></audio>    \n            </div>\n            <div className=\"row\">\n                <div>PAD {drum.pad}</div>\n                <div>KEY {drum.id}</div>\n            </div>\n            \n        </Tappable>\n    );\n}\n\nexport default Drumpad;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC;AAEtC,SAASC,OAAO,OAAgH;EAAA;EAAA,IAA/G;IAAE,YAAaC,IAAI;IAAEC,cAAc;IAAEC,MAAM;IAAkDC;EAAgB,CAAC;EAE3H,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMS,WAAW,GAAG;IAChB,iBAAiB,EAAE,KAAK;IACxB,aAAa,EAAE;EACnB,CAAC;EAGD,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAE1B,IAAIA,CAAC,CAACC,OAAO,KAAKT,IAAI,CAACU,OAAO,EAAE;MAC5BC,QAAQ,EAAE;IAEd;EAEJ,CAAC;EAGDf,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClBC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEP,cAAc,CAAC;IACpD,OAAO,MAAM;MACTM,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAER,cAAc,CAAC;IAC3D,CAAC;IACL;EACA,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAOZ,MAAMS,QAAQ,GAAG,MAAM;IACnBK,OAAO,CAACC,GAAG,CAACT,CAAC,CAAC;IACdP,cAAc,CAACD,IAAI,CAACkB,KAAK,CAAC;IAC1Bb,SAAS,CAAC,IAAI,CAAC;IACfc,UAAU,CAAC,MAAId,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACrC,MAAMe,KAAK,GAAGP,QAAQ,CAACQ,cAAc,CAACrB,IAAI,CAACsB,EAAE,CAAC;IAC9CnB,eAAe,CAACiB,KAAK,CAAC;;IAEtB;IACA;;IAEA;IACA;AACR;AACA;AACA;AACA;EACI,CAAC;;EAGD,oBACI,QAAC,QAAQ;IAAC,SAAS,EAAC,oBAAoB;IAAC,EAAE,EAAEpB,IAAI,CAACkB,KAAM;IAAC,YAAY,EAAEP,QAAS;IAAC,OAAO,EAAEA,QAAS;IAAC,KAAK,EAAEA,QAAS;IAAA,wBAChH;MAAK,SAAS,EAAG,UAAU;MAAC,EAAE,EAAEX,IAAI,CAACuB,GAAI;MAAC,KAAK,EAAGnB,MAAM,GAAGE,WAAW,GAAC,CAAC,CAAE;MAAA,WACrEN,IAAI,CAACsB,EAAE,eACR;QAAO,GAAG,EAAEtB,IAAI,CAACwB,GAAI;QAAC,EAAE,EAAExB,IAAI,CAACsB,EAAG;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,eACN;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB;QAAA,WAAK,MAAI,EAACtB,IAAI,CAACuB,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACzB;QAAA,WAAK,MAAI,EAACvB,IAAI,CAACsB,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEnB;AAAC,GAjEQvB,OAAO;AAAA,KAAPA,OAAO;AAmEhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}