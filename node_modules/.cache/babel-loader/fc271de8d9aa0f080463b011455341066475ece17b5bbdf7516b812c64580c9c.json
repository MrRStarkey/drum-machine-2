{"ast":null,"code":"var _jsxFileName = \"/home/drevil/react/drum-machine-2/src/components/drumpad.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drumpad(_ref) {\n  _s();\n  let {\n    /*drumObj,*/drum,\n    displayHandler,\n    volume /*, audioCtx, gainNode, destination, recorder,*/,\n    handlePlaySound\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const activeStyle = {\n    \"backgroundColor\": \"red\",\n    \"borderColor\": \"rgba(255,10,10,1)\"\n  };\n  const handleKeypress = e => {\n    if (e.keyCode === drum.keycode) {\n      playClip();\n      //handlePlaySound();\n      //setActive(true);\n      //setTimeout(()=>setActive(false), 200);\n      //handlePlaySound();\n    }\n  };\n\n  /*\n  React.useEffect(() => {\n      document.addEventListener(\"keydown\", handleKeypress);\n      return () => {\n          document.removeEventListener(\"keydown\", handleKeypress);\n      };\n  }, [volume]); \n   */\n\n  const playClip = e => {\n    console.log(e);\n    displayHandler(drum.label);\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    const sound = document.getElementById(drum.id);\n    handlePlaySound(sound);\n\n    //console.log(sound);\n    //sound.currentTime = 0;\n\n    //sound.play();\n    /*\n    let source = audioCtx.createMediaElementSource(sound);\n    source.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n    gainNode.connect(destination);*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drum-pad-container\",\n    id: drum.label,\n    onKeyDown: handleKeypress,\n    onClick: playClip,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drum-pad`,\n      id: drum.pad,\n      style: active ? activeStyle : {},\n      children: [drum.id, /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: drum.src,\n        id: drum.id,\n        className: \"clip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"PAD \", drum.pad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"KEY \", drum.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Drumpad, \"1cfVChV6gA1Fk8+xDnwTj3gmgZo=\");\n_c = Drumpad;\nexport default Drumpad;\nvar _c;\n$RefreshReg$(_c, \"Drumpad\");","map":{"version":3,"names":["React","useState","Drumpad","drum","displayHandler","volume","handlePlaySound","active","setActive","activeStyle","handleKeypress","e","keyCode","keycode","playClip","console","log","label","setTimeout","sound","document","getElementById","id","pad","src"],"sources":["/home/drevil/react/drum-machine-2/src/components/drumpad.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Drumpad({ /*drumObj,*/ drum, displayHandler, volume/*, audioCtx, gainNode, destination, recorder,*/, handlePlaySound }){\n\n    const [active, setActive] = useState(false);\n    const activeStyle = {\n        \"backgroundColor\": \"red\",\n        \"borderColor\": \"rgba(255,10,10,1)\"\n    };\n\n\n    const handleKeypress = (e) => {\n\n        if (e.keyCode === drum.keycode) {\n            playClip();\n            //handlePlaySound();\n            //setActive(true);\n            //setTimeout(()=>setActive(false), 200);\n            //handlePlaySound();\n        }\n        \n    };\n\n    /*\n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeypress);\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeypress);\n        };\n    }, [volume]); \n\n    */\n\n    \n    \n\n    const playClip = (e) => {\n        console.log(e);\n        displayHandler(drum.label);\n        setActive(true);\n        setTimeout(()=>setActive(false), 200);\n        const sound = document.getElementById(drum.id);\n        handlePlaySound(sound);\n        \n        //console.log(sound);\n        //sound.currentTime = 0;\n        \n        //sound.play();\n        /*\n        let source = audioCtx.createMediaElementSource(sound);\n        source.connect(gainNode);\n        gainNode.connect(audioCtx.destination);\n        gainNode.connect(destination);*/\n    };\n\n\n    return(\n        <div className=\"drum-pad-container\" id={drum.label} onKeyDown={handleKeypress} onClick={playClip}>\n            <div className={`drum-pad`} id={drum.pad} style={ active ? activeStyle:{}}>\n                {drum.id}\n                <audio src={drum.src} id={drum.id} className=\"clip\"></audio>    \n            </div>\n            <div className=\"row\">\n                <div>PAD {drum.pad}</div>\n                <div>KEY {drum.id}</div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Drumpad;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,OAAO,OAAgH;EAAA;EAAA,IAA/G;IAAE,YAAaC,IAAI;IAAEC,cAAc;IAAEC,MAAM;IAAkDC;EAAgB,CAAC;EAE3H,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMQ,WAAW,GAAG;IAChB,iBAAiB,EAAE,KAAK;IACxB,aAAa,EAAE;EACnB,CAAC;EAGD,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAE1B,IAAIA,CAAC,CAACC,OAAO,KAAKT,IAAI,CAACU,OAAO,EAAE;MAC5BC,QAAQ,EAAE;MACV;MACA;MACA;MACA;IACJ;EAEJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAMI,MAAMA,QAAQ,GAAIH,CAAC,IAAK;IACpBI,OAAO,CAACC,GAAG,CAACL,CAAC,CAAC;IACdP,cAAc,CAACD,IAAI,CAACc,KAAK,CAAC;IAC1BT,SAAS,CAAC,IAAI,CAAC;IACfU,UAAU,CAAC,MAAIV,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACrC,MAAMW,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAClB,IAAI,CAACmB,EAAE,CAAC;IAC9ChB,eAAe,CAACa,KAAK,CAAC;;IAEtB;IACA;;IAEA;IACA;AACR;AACA;AACA;AACA;EACI,CAAC;;EAGD,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAC,EAAE,EAAEhB,IAAI,CAACc,KAAM;IAAC,SAAS,EAAEP,cAAe;IAAC,OAAO,EAAEI,QAAS;IAAA,wBAC7F;MAAK,SAAS,EAAG,UAAU;MAAC,EAAE,EAAEX,IAAI,CAACoB,GAAI;MAAC,KAAK,EAAGhB,MAAM,GAAGE,WAAW,GAAC,CAAC,CAAE;MAAA,WACrEN,IAAI,CAACmB,EAAE,eACR;QAAO,GAAG,EAAEnB,IAAI,CAACqB,GAAI;QAAC,EAAE,EAAErB,IAAI,CAACmB,EAAG;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,eACN;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB;QAAA,WAAK,MAAI,EAACnB,IAAI,CAACoB,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACzB;QAAA,WAAK,MAAI,EAACpB,IAAI,CAACmB,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GAnEQpB,OAAO;AAAA,KAAPA,OAAO;AAqEhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}