{"ast":null,"code":"var _jsxFileName = \"/home/drevil/react/drum-machine-2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Display from './components/display';\nimport Drumpad from './components/drumpad';\nimport './App.css';\n\n// font imports\n\nimport \"./fonts/Ledsim-JRz7o.ttf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const db_url = \"./audio/\";\n  function initAudios() {\n    const promises = drumObj.drums.map(drum => {\n      const resp = fetch(db_url + drum.src) // fetch the file\n      ;\n\n      const buf = resp.arrayBuffer();\n      const AudioBuf = drumObj.audio_ctx.decodeAudioData(buf);\n      drum.buf = AudioBuf; // store the audioBuffer (won't change)\n      return Promise.resolve(drum);\n    });\n    return Promise.all(promises); // when all are loaded\n  }\n\n  const drumObj = {\n    audio_ctx: new AudioContext(),\n    generate_sound: drum => {\n      const source = drumObj.audio_ctx.createBufferSource();\n      source.buffer = drum.buf;\n      source.connect(drumObj.gain);\n      drum.source = source;\n      source.start(0);\n    },\n    drums: [{\n      pad: 1,\n      id: \"Q\",\n      keycode: 81,\n      label: \"High Tom\",\n      src: \"/audio/hitom.wav\"\n    }, {\n      pad: 2,\n      id: \"W\",\n      keycode: 87,\n      label: \"Mid Tom\",\n      src: \"/audio/midtom2.wav\"\n    }, {\n      pad: 3,\n      id: \"E\",\n      keycode: 69,\n      label: \"Low Tom\",\n      src: \"/audio/loetom.wav\"\n    }, {\n      pad: 4,\n      id: \"A\",\n      keycode: 65,\n      label: \"Kick\",\n      src: \"/audio/808bd2.wav\"\n    }, {\n      pad: 5,\n      id: \"S\",\n      keycode: 83,\n      label: \"Open High Hat\",\n      src: \"/audio/707-ohh.wav\"\n    }, {\n      pad: 6,\n      id: \"D\",\n      keycode: 68,\n      label: \"Foot High Hat \",\n      src: \"/audio/big-foot-hh.wav\"\n    }, {\n      pad: 7,\n      id: \"Z\",\n      keycode: 90,\n      label: \"Snare\",\n      src: \"/audio/brass-sd2.wav\"\n    }, {\n      pad: 8,\n      id: \"X\",\n      keycode: 88,\n      label: \"Bright Open High Hat\",\n      src: \"/audio/909-bright-ohh.wav\"\n    }, {\n      pad: 9,\n      id: \"C\",\n      keycode: 67,\n      label: \"Collapsed Hat\",\n      src: \"/audio/909-collapsed-hat.wav\"\n    }],\n    record: function record(e) {\n      const recordBtn = document.getElementById('record');\n      const chunks = [];\n      const recorder = new MediaRecorder(drumObj.streamNode.stream);\n      recorder.ondataavailable = e => chunks.push(e.data);\n      recorder.onstop = e => {\n        // export our recording to a new <audio> element\n        const blob = new Blob(chunks);\n        const url = URL.createObjectURL(blob);\n        const a = new Audio(url);\n        a.controls = true; // enable audio controls for new <audio> element\n        document.getElementById('records').appendChild(a);\n\n        // reset default click handler\n        recordBtn.onclick = drumObj.record;\n        // add styling to record button to indicate start recording\n      };\n\n      recordBtn.onclick = function () {\n        recorder.stop();\n      };\n      // start recording\n      recorder.start();\n      // add styling to record button to indicate stop recording\n    }\n  }; // end drumObj block\n\n  drumObj.gain = drumObj.audio_ctx.createGain();\n  drumObj.gain.gain.value = 1;\n  drumObj.gain.connect(drumObj.audio_ctx.destination);\n\n  // for recording\n  drumObj.streamNode = drumObj.audio_ctx.createMediaStreamDestination();\n  drumObj.gain.connect(drumObj.streamNode);\n  document.getElementById('record').onclick = drumObj.record;\n  const [display, setDisplay] = useState(\"\");\n  const [volume, setVolume] = useState(1);\n  const handleVolumeControl = e => {\n    setVolume(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: \"React Drum Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drum-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drumpad-container\",\n        children: drumObj.drums.map(drum => /*#__PURE__*/_jsxDEV(Drumpad, {\n          drum: drum,\n          displayHandler: setDisplay,\n          volume: volume\n        }, drum.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        value: display,\n        volume: volume,\n        handleChange: handleVolumeControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7JdsziYAEcFgC+44loK186rQUWE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Display","Drumpad","App","db_url","initAudios","promises","drumObj","drums","map","drum","resp","fetch","src","buf","arrayBuffer","AudioBuf","audio_ctx","decodeAudioData","Promise","resolve","all","AudioContext","generate_sound","source","createBufferSource","buffer","connect","gain","start","pad","id","keycode","label","record","e","recordBtn","document","getElementById","chunks","recorder","MediaRecorder","streamNode","stream","ondataavailable","push","data","onstop","blob","Blob","url","URL","createObjectURL","a","Audio","controls","appendChild","onclick","stop","createGain","value","destination","createMediaStreamDestination","display","setDisplay","volume","setVolume","handleVolumeControl","target"],"sources":["/home/drevil/react/drum-machine-2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Display from './components/display';\nimport Drumpad from './components/drumpad';\nimport './App.css';\n\n// font imports\n\nimport \"./fonts/Ledsim-JRz7o.ttf\";\n\nfunction App() {\n\n  const db_url = \"./audio/\";\n\n  function initAudios() {\n    const promises = drumObj.drums.map(drum => {\n      const resp = fetch(db_url + drum.src) // fetch the file\n        ;\n      const buf = resp.arrayBuffer();\n      const AudioBuf = drumObj.audio_ctx.decodeAudioData(buf);\n      drum.buf = AudioBuf; // store the audioBuffer (won't change)\n      return Promise.resolve(drum);\n    });\n    return Promise.all(promises); // when all are loaded\n  }\n  \n  const drumObj = {\n    audio_ctx: new AudioContext(),\n    generate_sound: (drum) => {\n      const source = drumObj.audio_ctx.createBufferSource();\n      source.buffer = drum.buf;\n      source.connect(drumObj.gain); \n      drum.source = source;\n      source.start(0);\n    },   \n    drums: [{\n        pad: 1,\n        id: \"Q\",\n        keycode: 81,\n        label: \"High Tom\",\n        src: \"/audio/hitom.wav\"\n      },\n      {\n        pad: 2,\n        id: \"W\",\n        keycode: 87,\n        label: \"Mid Tom\",\n        src: \"/audio/midtom2.wav\"\n      },\n      {\n        pad: 3,\n        id: \"E\",\n        keycode: 69,\n        label: \"Low Tom\",\n        src: \"/audio/loetom.wav\"\n      },\n      {\n        pad: 4,\n        id: \"A\",\n        keycode: 65,\n        label: \"Kick\",\n        src: \"/audio/808bd2.wav\"\n      },\n      {\n        pad: 5,\n        id: \"S\",\n        keycode: 83,\n        label: \"Open High Hat\",\n        src: \"/audio/707-ohh.wav\"\n      },\n      {\n        pad: 6,\n        id: \"D\",\n        keycode: 68,\n        label: \"Foot High Hat \",\n        src: \"/audio/big-foot-hh.wav\"\n      },\n      {\n        pad: 7,\n        id: \"Z\",\n        keycode: 90,\n        label: \"Snare\",\n        src: \"/audio/brass-sd2.wav\"\n      },\n      {\n        pad: 8,\n        id: \"X\",\n        keycode: 88,\n        label: \"Bright Open High Hat\",\n        src: \"/audio/909-bright-ohh.wav\"\n      },\n      {\n        pad: 9,\n        id: \"C\",\n        keycode: 67,\n        label: \"Collapsed Hat\",\n        src: \"/audio/909-collapsed-hat.wav\"\n      }\n\n    ],  \n    record: function record(e) {\n      const recordBtn = document.getElementById('record');\n      const chunks = [];\n      const recorder = new MediaRecorder(drumObj.streamNode.stream);\n    \n      recorder.ondataavailable = e => chunks.push(e.data);\n      recorder.onstop = e => {\n\n        // export our recording to a new <audio> element\n        const blob = new Blob(chunks);\n        const url = URL.createObjectURL(blob);\n        const a = new Audio(url);\n        a.controls = true; // enable audio controls for new <audio> element\n        document.getElementById('records').appendChild(a);\n\n        // reset default click handler\n        recordBtn.onclick = drumObj.record;\n        // add styling to record button to indicate start recording\n\n      }\n      recordBtn.onclick = function () {\n        recorder.stop();\n      };\n      // start recording\n      recorder.start();\n      // add styling to record button to indicate stop recording\n    }\n  }; // end drumObj block\n\n  drumObj.gain = drumObj.audio_ctx.createGain();\n  drumObj.gain.gain.value = 1;\n  drumObj.gain.connect(drumObj.audio_ctx.destination);\n\n  // for recording\n  drumObj.streamNode = drumObj.audio_ctx.createMediaStreamDestination();\n  drumObj.gain.connect(drumObj.streamNode);\n\n  document.getElementById('record').onclick = drumObj.record;\n\n  const [display, setDisplay] = useState(\"\");\n  const [volume, setVolume] = useState(1);\n\n  const handleVolumeControl = (e) => {\n    setVolume(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">React Drum Machine</div>\n      <div id=\"drum-machine\">\n        <div id=\"drumpad-container\">\n          {drumObj.drums.map((drum) => <Drumpad key={drum.id} drum={drum} displayHandler={setDisplay} volume={volume}/>)}\n        </div>\n        <Display value={display} volume={volume} handleChange={handleVolumeControl}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}