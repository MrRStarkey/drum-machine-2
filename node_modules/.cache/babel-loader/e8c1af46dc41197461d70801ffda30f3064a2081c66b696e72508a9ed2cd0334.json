{"ast":null,"code":"var _jsxFileName = \"/home/drevil/react/drum-machine-2/src/components/drumpad.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tappable from 'react-tappable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drumpad(_ref) {\n  _s();\n  let {\n    drum,\n    displayHandler,\n    volume,\n    handlePlaySound\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const activeStyle = {\n    \"backgroundColor\": \"red\",\n    \"borderColor\": \"rgba(255,10,10,1)\"\n  };\n  const handleKeypress = e => {\n    if (e.keyCode === drum.keycode) {\n      playClip();\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeypress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeypress);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume]);\n  const playClip = () => {\n    displayHandler(drum.label);\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    let sound = document.getElementById(drum.id);\n    handlePlaySound(sound);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drum-pad-container\",\n    id: drum.label,\n    children: [/*#__PURE__*/_jsxDEV(Tappable, {\n      className: `drum-pad`,\n      id: drum.pad,\n      style: active ? activeStyle : {},\n      onTap: playClip,\n      children: [drum.id, /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: drum.src,\n        id: drum.id,\n        className: \"clip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"PAD \", drum.pad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"KEY \", drum.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Drumpad, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n_c = Drumpad;\nexport default Drumpad;\nvar _c;\n$RefreshReg$(_c, \"Drumpad\");","map":{"version":3,"names":["React","useState","Tappable","Drumpad","drum","displayHandler","volume","handlePlaySound","active","setActive","activeStyle","handleKeypress","e","keyCode","keycode","playClip","useEffect","document","addEventListener","removeEventListener","label","setTimeout","sound","getElementById","id","pad","src"],"sources":["/home/drevil/react/drum-machine-2/src/components/drumpad.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Tappable from 'react-tappable';\n\nfunction Drumpad({ drum, displayHandler, volume, handlePlaySound }){\n\n    const [active, setActive] = useState(false);\n    const activeStyle = {\n        \"backgroundColor\": \"red\",\n        \"borderColor\": \"rgba(255,10,10,1)\"\n    };\n\n\n    const handleKeypress = (e) => {\n\n        if (e.keyCode === drum.keycode) {\n            playClip();  \n        }\n    };\n\n    \n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeypress);\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeypress);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [volume]); \n\n    \n\n    \n    \n\n    const playClip = () => {\n        \n        displayHandler(drum.label);\n        setActive(true);\n        setTimeout(()=>setActive(false), 200);\n        let sound = document.getElementById(drum.id);\n        handlePlaySound(sound);\n        \n    };\n\n\n    return(\n        <div className=\"drum-pad-container\" id={drum.label}>\n            <Tappable className={`drum-pad`} id={drum.pad} style={ active ? activeStyle:{}} onTap={playClip}>\n                {drum.id}\n                <audio src={drum.src} id={drum.id} className=\"clip\"></audio>    \n            </Tappable>\n            <div className=\"row\">\n                <div>PAD {drum.pad}</div>\n                <div>KEY {drum.id}</div>\n            </div>            \n        </div>\n    );\n}\n\nexport default Drumpad;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC;AAEtC,SAASC,OAAO,OAAmD;EAAA;EAAA,IAAlD;IAAEC,IAAI;IAAEC,cAAc;IAAEC,MAAM;IAAEC;EAAgB,CAAC;EAE9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMS,WAAW,GAAG;IAChB,iBAAiB,EAAE,KAAK;IACxB,aAAa,EAAE;EACnB,CAAC;EAGD,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAE1B,IAAIA,CAAC,CAACC,OAAO,KAAKT,IAAI,CAACU,OAAO,EAAE;MAC5BC,QAAQ,EAAE;IACd;EACJ,CAAC;EAGDf,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClBC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEP,cAAc,CAAC;IACpD,OAAO,MAAM;MACTM,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAER,cAAc,CAAC;IAC3D,CAAC;IACL;EACA,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAOZ,MAAMS,QAAQ,GAAG,MAAM;IAEnBV,cAAc,CAACD,IAAI,CAACgB,KAAK,CAAC;IAC1BX,SAAS,CAAC,IAAI,CAAC;IACfY,UAAU,CAAC,MAAIZ,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACrC,IAAIa,KAAK,GAAGL,QAAQ,CAACM,cAAc,CAACnB,IAAI,CAACoB,EAAE,CAAC;IAC5CjB,eAAe,CAACe,KAAK,CAAC;EAE1B,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAC,EAAE,EAAElB,IAAI,CAACgB,KAAM;IAAA,wBAC/C,QAAC,QAAQ;MAAC,SAAS,EAAG,UAAU;MAAC,EAAE,EAAEhB,IAAI,CAACqB,GAAI;MAAC,KAAK,EAAGjB,MAAM,GAAGE,WAAW,GAAC,CAAC,CAAE;MAAC,KAAK,EAAEK,QAAS;MAAA,WAC3FX,IAAI,CAACoB,EAAE,eACR;QAAO,GAAG,EAAEpB,IAAI,CAACsB,GAAI;QAAC,EAAE,EAAEtB,IAAI,CAACoB,EAAG;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,eACX;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB;QAAA,WAAK,MAAI,EAACpB,IAAI,CAACqB,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACzB;QAAA,WAAK,MAAI,EAACrB,IAAI,CAACoB,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GArDQrB,OAAO;AAAA,KAAPA,OAAO;AAuDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}